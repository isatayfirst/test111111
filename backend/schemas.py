from pydantic import BaseModel
from typing import Optional

# üîê –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserCreate(BaseModel):
    name: str
    login: str
    password: str

# üîê –î–ª—è –≤—Ö–æ–¥–∞
class UserLogin(BaseModel):
    login: str
    password: str

# ‚úÖ –û—Ç–≤–µ—Ç –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–≤—Ö–æ–¥–µ
class UserOut(BaseModel):
    id: int
    name: str
    login: str
    avatar: Optional[str] = None

    class Config:
        orm_mode = True  # –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å SQLAlchemy-–æ–±—ä–µ–∫—Ç–∞–º–∏

# üîë –û—Ç–≤–µ—Ç —Å —Ç–æ–∫–µ–Ω–æ–º
class Token(BaseModel):
    access_token: str
    token_type: str = "bearer"

from datetime import datetime

class MessageCreate(BaseModel):
    to: int         # ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    text: str

class MessageOut(BaseModel):
    id: int
    from_user: int
    to: int
    text: str
    timestamp: datetime

    class Config:
        from_attributes = True
